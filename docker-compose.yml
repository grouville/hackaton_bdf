version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www:cached
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: hackaton
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "7000:80"
    links:
      - db:db
    environment:
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    networks:
      - app-network

  #Python Service
  app:
    build:
      context: .
      dockerfile: ./scraper/Dockerfile
    container_name: scraper
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: scrap
      SERVICE_TAGS: dev
    working_dir: /usr/src/app
    volumes:
      - ./scraper/:/usr/src/app
    networks:
      - app-network




#Docker Networks
networks:
  esnet:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
  esdata1:
    driver: local
  esdata2:
    driver: local
